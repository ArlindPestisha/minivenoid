{"version":3,"sources":["three/card.js","three/view.js","utils.js","three/connections.js","three/camera.js","index.js"],"names":["width","height","borderRadius","bevel","ViewContext","React","createContext","ViewProvider","zoom","position","children","value","useMemo","Provider","useView","useContext","getPixelDensityForZoom","Math","exp","setCursor","cursor","document","documentElement","style","cardBufferGeometry","Float32Array","Array","fill","map","_","index","arr","prevAngle","PI","angle","cos","sin","flat","Card","memo","card","cardIndex","geometry","material","onMoveCard","bind","useGesture","onPointerEnter","buttons","onPointerLeave","button","onDragStart","onDragEnd","onDrag","active","movement","mx","my","pixelDensity","getValue","id","pointerEvents","Cards","cards","props","useResource","cardRef","cardGeometry","cardMaterialRef","cardMaterial","ref","attachObject","count","length","array","itemSize","color","opacity","key","Connection","fromPosition","toPosition","geomRef","useRef","connectionBufferGeom","attributeRef","useUpdate","attribute","needsUpdate","attach","Connections","connections","conn","find","c","from","to","Camera","makeDefault","useThree","setDefaultCamera","camera","size","cameraRef","useFrame","current","updateProjectionMatrix","useLayoutEffect","oldCam","orthographicCamera","left","right","top","bottom","interpolate","x","y","urlParams","URLSearchParams","window","location","search","MAX_CARDS","parseInt","get","model","amt","amtConn","undefined","random","sqrt","toString","ranId","max","floor","generateModel","ReactDOM","render","domTarget","useState","setCards","useSpring","setZoom","setPosition","bindEvents","onWheel","event","deltaModeMultiplier","deltaMode","m","i","immediate","onPinch","d","da","direction","velocity","config","passive","useEffect","onChangeCard","useCallback","action","findIndex","slice","getElementById"],"mappings":"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","file":"static/js/main.9d54126f.chunk.js","sourcesContent":["// @ts-check\nimport React from \"react\"\nimport { useResource } from \"react-three-fiber\"\nimport { useGesture } from \"react-use-gesture\"\nimport { useZoom } from \"./view\"\nimport { getPixelDensityForZoom, setCursor } from \"../utils\"\n\n/**\n * @param {number} width\n * @param {number} height\n * @param {number} borderRadius\n * @param {number} bevel\n */\nconst makeCardBufferGeometry = (width, height, borderRadius, bevel) =>\n  // prettier-ignore\n  new Float32Array([\n    // Main body\n    0, borderRadius, 0,\n    width, height - borderRadius, 0,\n    0, height - borderRadius, 0,\n    // --\n    0, borderRadius, 0,\n    width, borderRadius, 0,\n    width, height - borderRadius, 0,\n\n    // different bevel levels\n    ...(new Array(bevel).fill(0).map((_, index, arr) => {\n      const prevAngle = index * Math.PI/(2*bevel)\n      const angle = (index + 1) * Math.PI/(2*bevel)\n      \n      return [\n        // bottom\n        borderRadius*(1-Math.cos(prevAngle)), borderRadius*(1-Math.sin(prevAngle)), 0,\n        borderRadius*(1-Math.cos(angle)), borderRadius*(1-Math.sin(angle)), 0,\n        width - borderRadius*(1-Math.cos(prevAngle)), borderRadius*(1-Math.sin(prevAngle)), 0,\n\n        borderRadius*(1-Math.cos(angle)), borderRadius*(1-Math.sin(angle)), 0,\n        width - borderRadius*(1-Math.cos(angle)), borderRadius*(1-Math.sin(angle)), 0,\n        width - borderRadius*(1-Math.cos(prevAngle)), borderRadius*(1-Math.sin(prevAngle)), 0,\n\n        // top\n        borderRadius*(1-Math.cos(angle)), height - borderRadius*(1-Math.sin(angle)), 0,\n        borderRadius*(1-Math.cos(prevAngle)), height - borderRadius*(1-Math.sin(prevAngle)), 0,\n        width - borderRadius*(1-Math.cos(prevAngle)), height - borderRadius*(1-Math.sin(prevAngle)), 0,\n\n        width - borderRadius*(1-Math.cos(angle)), height - borderRadius*(1-Math.sin(angle)), 0,\n        borderRadius*(1-Math.cos(angle)), height - borderRadius*(1-Math.sin(angle)), 0,\n        width - borderRadius*(1-Math.cos(prevAngle)), height - borderRadius*(1-Math.sin(prevAngle)), 0,\n      ]\n    }).flat())\n\n  ])\n\nconst cardBufferGeometry = makeCardBufferGeometry(120, 200, 10, 4)\n\nconst Card = React.memo(function CardMemo({\n  card,\n  cardIndex,\n  geometry,\n  material,\n  onMoveCard,\n}) {\n  const zoom = useZoom()\n  const bind = useGesture(\n    {\n      onPointerEnter: ({ buttons }) => {\n        if (buttons) return\n        setCursor(\"grab\")\n      },\n      onPointerLeave: ({ buttons, button }) => {\n        if (buttons) return\n        setCursor()\n      },\n      onDragStart: () => {\n        setCursor(\"grabbing\")\n      },\n      onDragEnd: () => {\n        setCursor(\"grab\")\n      },\n      onDrag: ({ buttons, active, movement: [mx, my], memo }) => {\n        // Only allow left-click drags\n        if (buttons !== 1) {\n          return\n        }\n        if (!memo) {\n          memo = card.position\n        }\n        const pixelDensity = getPixelDensityForZoom(zoom.getValue())\n        onMoveCard({\n          id: card.id,\n          position: [memo[0] + mx / pixelDensity, memo[1] - my / pixelDensity],\n        })\n        return memo\n      },\n    },\n    { pointerEvents: true },\n  )\n  return (\n    <mesh\n      position={[...card.position, cardIndex * 1e-10]}\n      geometry={geometry}\n      material={material}\n      {...bind()}\n    />\n  )\n})\n\n/** Group of cards - also takes care of declaring reused materials and geometries */\nexport const Cards = ({ cards, ...props }) => {\n  const [cardRef, cardGeometry] = useResource()\n  const [cardMaterialRef, cardMaterial] = useResource()\n\n  return (\n    <>\n      <bufferGeometry ref={cardRef}>\n        <bufferAttribute\n          attachObject={[\"attributes\", \"position\"]}\n          count={cardBufferGeometry.length / 3}\n          array={cardBufferGeometry}\n          itemSize={3}\n        />\n      </bufferGeometry>\n      <meshBasicMaterial ref={cardMaterialRef} color=\"#222\" opacity={0.7} />\n      {cardGeometry &&\n        cardMaterial &&\n        cards.map((card, index) => (\n          <Card\n            key={card.id}\n            card={card}\n            cardIndex={index}\n            geometry={cardGeometry}\n            material={cardMaterial}\n            {...props}\n          />\n        ))}\n    </>\n  )\n}\n","import React from \"react\"\n\nconst ViewContext = React.createContext()\n\nexport const ViewProvider = ({ zoom, position, children }) => {\n  const value = React.useMemo(() => ({ zoom, position }), [zoom, position])\n  return <ViewContext.Provider value={value}>{children}</ViewContext.Provider>\n}\n\n// context hook\nexport const useView = () => React.useContext(ViewContext)\n\n// convenient hooks\nexport const useZoom = () => useView().zoom\nexport const usePosition = () => useView().position\n","/**\n * Returns the pixel density for a given zoom level\n * @param {number} zoom\n */\nexport const getPixelDensityForZoom = zoom => Math.exp(zoom)\n\n/**\n * Sets the global cursor type\n * @param {string} [cursor]\n */\nexport const setCursor = cursor => {\n  if (cursor) {\n    document.documentElement.style.cursor = cursor\n  } else {\n    document.documentElement.style.cursor = null\n  }\n}\n","import React from \"react\"\nimport { useUpdate } from \"react-three-fiber\"\n\nconst Connection = React.memo(function Connection({\n  fromPosition,\n  toPosition,\n}) {\n  const geomRef = React.useRef(null)\n  // prettier-ignore\n  const connectionBufferGeom = new Float32Array([\n    ...fromPosition, 0,\n    ...toPosition, 0,\n  ])\n\n  const attributeRef = useUpdate(\n    attribute => {\n      attribute.needsUpdate = true\n    },\n    [fromPosition, toPosition],\n  )\n\n  return (\n    <line>\n      <bufferGeometry ref={geomRef} attach=\"geometry\">\n        <bufferAttribute\n          ref={attributeRef}\n          attachObject={[\"attributes\", \"position\"]}\n          array={connectionBufferGeom}\n          count={2}\n          itemSize={3}\n        />\n      </bufferGeometry>\n      <lineBasicMaterial attach=\"material\" color=\"#333\" />\n    </line>\n  )\n})\n\nexport const Connections = ({ connections, cards }) => {\n  return (\n    <>\n      {connections.map(conn => (\n        <Connection\n          key={conn.id}\n          fromPosition={cards.find(c => c.id === conn.from).position}\n          toPosition={cards.find(c => c.id === conn.to).position}\n        />\n      ))}\n    </>\n  )\n}\n","import React from \"react\"\nimport { useThree, useFrame } from \"react-three-fiber\"\nimport { a } from \"react-spring/three\"\nimport { useView } from \"./view\"\nimport { getPixelDensityForZoom } from \"../utils\"\n\nexport const Camera = ({ makeDefault = true, ...props }) => {\n  const { setDefaultCamera, camera, size } = useThree()\n  const { zoom, position } = useView()\n  const cameraRef = React.useRef(null)\n\n  useFrame(() => {\n    cameraRef.current.updateProjectionMatrix()\n  })\n\n  React.useLayoutEffect(() => {\n    if (makeDefault) {\n      const oldCam = camera\n      setDefaultCamera(cameraRef.current)\n      return () => setDefaultCamera(oldCam)\n    }\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [makeDefault, setDefaultCamera])\n\n  return (\n    <a.orthographicCamera\n      ref={cameraRef}\n      left={size.width / -2}\n      right={size.width / 2}\n      top={size.height / 2}\n      bottom={size.height / -2}\n      position={position.interpolate((x, y) => [x, -y, 5])}\n      zoom={zoom.interpolate(getPixelDensityForZoom)}\n      {...props}\n    />\n  )\n}\n","// @ts-check\nimport React from \"react\"\nimport ReactDOM from \"react-dom\"\nimport { Canvas } from \"react-three-fiber\"\nimport { useSpring } from \"react-spring/three\"\nimport { useGesture } from \"react-use-gesture\"\n\nimport { ViewProvider } from \"./three/view\"\nimport { Cards } from \"./three/card\"\nimport { Connections } from \"./three/connections\"\nimport { Camera } from \"./three/camera\"\nimport { getPixelDensityForZoom } from \"./utils\"\n\nimport \"./index.css\"\n\nconst urlParams = new URLSearchParams(window.location.search)\n\nconst MAX_CARDS = parseInt(urlParams.get(\"amt\")) || 500\nconst MAX_CONNECTIONS = 200\n\nconst generateModel = (amt = MAX_CARDS, amtConn = MAX_CONNECTIONS) => {\n  const cards = new Array(amt).fill(undefined).map(() => ({\n    position: [\n      (0.5 - Math.random()) * Math.sqrt(amt) * 500,\n      (0.5 - Math.random()) * Math.sqrt(amt) * 400,\n    ],\n    id: Math.random().toString(),\n  }))\n\n  const connections = new Array(amtConn).fill(0).map(() => {\n    const ranId = Math.max(0, Math.floor(Math.random() * cards.length - 1))\n    return {\n      id: Math.random().toString(),\n      from: cards[ranId].id,\n      to: cards[ranId + 1].id,\n    }\n  })\n\n  return { cards, connections }\n}\n\nconst model = generateModel()\n\nconst App = () => {\n  const domTarget = React.useRef(null)\n  const [cards, setCards] = React.useState(model.cards)\n  // eslint-disable-next-line no-unused-vars\n  const [connections, setConnections] = React.useState(model.connections)\n\n  const [{ zoom }, setZoom] = useSpring(() => ({ zoom: 0 }))\n  const [{ position }, setPosition] = useSpring(() => ({ position: [0, 0] }))\n\n  const bindEvents = useGesture(\n    {\n      onWheel: ({ event, movement, memo, active }) => {\n        if (!event) return\n\n        /** @see https://developer.mozilla.org/en-US/docs/Web/API/WheelEvent/deltaMode */\n        const deltaModeMultiplier = event.deltaMode === 0x00 ? 1 : 50\n\n        // Initialize the memo\n        if (!memo) {\n          memo = position.getValue()\n        }\n\n        const pixelDensity = getPixelDensityForZoom(zoom.getValue())\n\n        setPosition({\n          position: movement.map(\n            (m, i) => (m / pixelDensity) * deltaModeMultiplier + memo[i],\n          ),\n          immediate: active,\n        })\n\n        return memo\n      },\n      onPinch: ({ da: [d] }) => {\n        // sensitivity fix\n        const zoom = d / 50\n        setZoom({ zoom })\n      },\n      onDrag: ({ buttons, active, movement, direction, velocity, memo }) => {\n        // only allow the wheel to drag the canvas\n        /** @see https://developer.mozilla.org/fr/docs/Web/API/MouseEvent/buttons */\n        if (buttons !== 4) {\n          return\n        }\n\n        // Initialize the memo\n        if (!memo) {\n          memo = position.getValue()\n        }\n\n        const pixelDensity = getPixelDensityForZoom(zoom.getValue())\n\n        setPosition({\n          position: movement.map((m, i) => m * pixelDensity + memo[i]),\n          immediate: active,\n          config: {\n            velocity: direction.map(d => d * velocity),\n          },\n        })\n        return memo\n      },\n    },\n    {\n      domTarget,\n      event: { passive: false }, // needed for pinch events\n    },\n  )\n\n  React.useEffect(bindEvents, [bindEvents])\n\n  const onChangeCard = React.useCallback((id, action) => {\n    setCards(cards => {\n      const cardIndex = cards.findIndex(c => c.id === id)\n      return [\n        ...cards.slice(0, cardIndex),\n        action(cards[cardIndex]),\n        ...cards.slice(cardIndex + 1),\n      ]\n    })\n  }, [])\n\n  const onMoveCard = React.useCallback(\n    ({ id, position }) => {\n      onChangeCard(id, card => ({ ...card, position }))\n    },\n    [onChangeCard],\n  )\n\n  return (\n    <div ref={domTarget}>\n      <Canvas>\n        <ViewProvider zoom={zoom} position={position}>\n          <Camera />\n          <Connections cards={cards} connections={connections} />\n          <Cards cards={cards} onMoveCard={onMoveCard} />\n        </ViewProvider>\n      </Canvas>\n    </div>\n  )\n}\n\nReactDOM.render(<App />, document.getElementById(\"root\"))\n"],"sourceRoot":""}